{
    "env": {
        "browser": true,
        "es6": true,
        "jest": true
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "extends": [
        "eslint:recommended",
        "prettier/react",
        "plugin:react/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "plugins": [
        "react"
    ],
    "overrides": [
        {
            "files": [
                "**/*.ts",
                "**/*.tsx"
            ],
            "extends": [
                "plugin:@typescript-eslint/recommended",
                "prettier/@typescript-eslint"
            ],
            "plugins": [
                "@typescript-eslint"
            ],
            "rules": {
                "require-atomic-updates": "off",
                "@typescript-eslint/explicit-function-return-type": "warn",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/interface-name-prefix": "off",
                // Safe to disable the following rules as TSC will throw, ESLint doesn't understand interfaces properly,
                // https://github.com/eslint/typescript-eslint-parser/issues/437
                "@typescript-eslint/no-unused-vars": "off",
                "@typescript-eslint/ban-ts-comment": ["error",{
                    "ts-ignore": "allow-with-description"
                }]
            }
        }
    ],
    "rules": {
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "always"
        ],
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "error",
        "react/react-in-jsx-scope": "error",
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [
                    ".tsx",
                    ".jsx"
                ]
            }
        ],
        "react/display-name": "off"
    }
}
