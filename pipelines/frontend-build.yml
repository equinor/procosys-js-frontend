trigger:
  branches:
    include:
      - pipeline-build

resources:
- repo: self

variables:
  System.Debug: 'true'
  vmImageName: 'ubuntu-latest'
  imageName: 'frontend'
  dockerRegistryServiceConnection: 'ACR - pcspreservation'
  containerRegistry: 'pcspreservation.azurecr.io'
  dockerComposeFile: 'docker-compose.yml'


stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    - task: DockerCompose@0
      displayName: Build
      inputs:
        action: Build services
        azureSubscriptionEndpoint: 'IT PLA LCI - Procosys (343069e3-ceaa-4256-bdc8-49fa3646c1c4)'
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: $(dockerComposeFile)
        additionalImageTags: $(Build.BuildId)
        dockerComposeFileArgs: |
          firstArg=testarg
          secondArg=secondtestarg

    # - task: DockerCompose@0
    #   displayName: Push services
    #   inputs:
    #     action: Push services
    #     azureSubscriptionEndpoint: 'IT PLA LCI - Procosys (343069e3-ceaa-4256-bdc8-49fa3646c1c4)'
    #     azureContainerRegistry: $(containerRegistry)
    #     dockerComposeFile: $(dockerComposeFile)
    #     projectName: $(Build.Repository.Name)
    #     qualifyImageNames: true
    #     additionalImageTags: $(Build.BuildId)